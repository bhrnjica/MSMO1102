data1 <- read.csv("data\data1.txt", true, ",", dec = ".");
data1 <- read.csv("data/data1.txt", true, ",", dec = ".");
data1 <- read.csv("data/data1.txt", header = true, sep = ",", dec = ".");
data1 <- read.table("data/data1.txt", header = true, sep = ",", dec = ".");
data1 <- read.csv("data/data1.txt", header = TRUE, sep = ",", dec = ".");
str(data1)
data1
mean(data1$x)
mean(data1$x, na.rm = T )
data1 <- read.csv("data/data1.txt", header = TRUE, sep = ",", dec = ".");
#strukture podataka
str(data1)
data1 <- read.csv("data/data1.txt", header = TRUE, sep = ",", dec = ".");
#strukture podataka
str(data1)
data1 <- read.csv("data/data1.txt", header = TRUE, sep = ",", dec = ".", check.names = FALSE);
#strukture podataka
str(data1)
data1 <- read.csv("data/data1.txt", header = TRUE, sep = ",", dec = ".", check.names = FALSE);
#strukture podataka
str(data1)
data1 <- read.csv("data/data1.txt", header = TRUE, sep = ",", dec = ".", check.names = FALSE);
#strukture podataka
str(data1)
data$x1 <- data1$`´╗┐x1`
data1 <- read.csv("data/data1.txt", header = TRUE, sep = ",", dec = ".");
data$x1 <- data1$`´╗┐x1`
data$x <- data1$`´╗┐x1`
data1 <- read.csv("data/data1.txt", header = TRUE, sep = ",", dec = ".");
str(data1)
data$x <- data1$X...x1
data1 <- read.csv("data/data1.txt", header = TRUE, sep = ",", dec = ".", check.names = F);
str(data1)
data1 <- read.csv("data/data1.txt", header = TRUE, sep = ",", dec = ".", check.names = T, row.names = 1);
str(data1)
data1 <- read.csv("data/data1.txt", sep = ",", dec = ".", check.names = F, row.names = 1);
str(data1)
data1 <- read.csv("data/data1.txt", sep = ",", dec = ".", check.names = F, row.names = 1);
str(data1)
data1 <- read.csv("data/data1.txt", sep = ",", dec = ".", check.names = F);
data1 <- read.csv("data/data1.txt", header = F, sep = ",", dec = ".", check.names = F);
str(data1)
data1$V1 = as.numeric(data1$V1);
#strukture podataka
str(data1)
rename(data1, c("V1" = "x", "V2" = "y"))
library(plyr)
rename(data1, c("V1" = "x", "V2" = "y"))
str(data1)
rename(data1, c("v1" = "x", "v2" = "y"))
str(data1)
rename(data1, c("V1" = "x1", "V2" = "y1"))
#strukture podataka
str(data1)
str(data1)
data1 <- read.csv("data/data1.txt", header = F, sep = ",", dec = ".", check.names = F);
str(data1)
data1 <- read.csv("data/data1.txt", header = T, sep = ",", dec = ".");
str(data1)
data1 <- read.csv("data/data1.txt", header = T, sep = ",", dec = ".");
#strukture podataka
str(data1)
data1 <- read.csv("data/data1.txt", header = T, dec = ".");
#strukture podataka
str(data1)
data1 <- read.csv("data/data1.txt", header = T, sep = "\t", dec = ".");
#strukture podataka
str(data1)
print(data1)
data1 <- read.csv("data/data1.txt", header = T, sep = ",", dec = ".");
print(data1)
data1 <- read.table("data/data1.txt", header = T, sep = ",", dec = ".");
print(data1)
#strukture podataka
str(data1)
data1 <- read.table("data/data1.txt", header = T, sep = ",", dec = ".", strip.white = TRUE,);
print(data1)
#strukture podataka
str(data1)
data1 <- read.table("data/data1.txt", header = F, col.names = c("x", "y"), sep = ",", dec = ".", strip.white = TRUE,);
print(data1)
#strukture podataka
str(data1)
mean(data1$x, na.rm = T)
mean(data1$x, na.rm = T)
data1 <- read.table("data/data1.txt", header = F, col.names = c("x", "y"), sep = ",", dec = ".", strip.white = TRUE,);
print(data1)
#strukture podataka
str(data1)
#prikaz podataka
data1
#statistika
mean(data1$x, na.rm = T)
mean(data1$x, na.rm = T)
mean(data1$x)
str(data1)
data1$x = as.numeric(data1$x);
#prikaz podataka
mean(data1$x)
xsr = mean(data1$x);
ysr = mean(data1$y);
xsr
ysr
lrmodel = lm(formula,data1)
formula = y ~ x
#linearni regresijski model 
lrmodel = lm(formula,data1)
lrmodel
data1
data1 <- read.table("data/data1.txt", header = F, col.names = c("x", "y"), sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
#strukture podataka
str(data1)
data1 <- read.table("data/podaci.txt", header = F, col.names = c("x", "y"), sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
#strukture podataka
str(data1)
data1 <- read.table("data/podaci.txt", header = F, col.names = c("x", "y"), sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
#strukture podataka
data1 <- read.csv("data/podaci.csv", header = F, col.names = c("x", "y"), sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
#strukture podataka
data1 <- read.csv("data/podaci1.csv", header = F, col.names = c("x", "y"), sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
#strukture podataka
str(data1)
#prva kolona mora biti numerička
data1$x = as.numeric(data1$x);
#prikaz podataka
data1
#statistika
xsr = mean(data1$x);
ysr = mean(data1$y);
#formiranje linearnog regresijskog modela u obliku y= b0 + b1x
#definisanje formule u R programskom jeziku
formula = y ~ x
#linearni regresijski model 
lrmodel = lm(formula, data1)
#prikaz koeficijenata regresijskog modela
lrmodel
xi = c(23,13,15,14)
xi = c(23,13,15,14)
yi = predict(lrmodel, xi)
yi = predict(lrmodel, 23)
new <- data.frame(x = seq(23, 13, 15, 14))
x = seq(23, 13, 15, 14)
x = c(23, 13, 15, 14)
yi = predict(lrmodel, x)
yi = predict(lrmodel, data = x)
yi
x = c(23)
yi = predict(lrmodel, data = x)
yi
predict(lrmodel, data = x)
new <- data.frame(x = seq(-3, 3, 0.5))
predict(lrmodel, new, se.fit = TRUE)
pred.w.plim <- predict(lrmodel, new, interval = "prediction")
pred.w.clim <- predict(lrmodel, new, interval = "confidence")
matplot(new$x, cbind(pred.w.clim, pred.w.plim[, -1]),         lty = c(1, 2, 2, 3, 3), type = "l", ylab = "predicted y")
data1 <- read.csv("data/podaci1.csv", header = F, col.names = c("x", "y"), sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
#strukture podataka
str(data1)
data1
#statistika
xsr = mean(data1$x);
ysr = mean(data1$y);
#formiranje linearnog regresijskog modela u obliku y= b0 + b1x
#definisanje formule u R programskom jeziku
formula = y ~ x
#linearni regresijski model 
lrmodel = lm(formula, data1)
#prikaz koeficijenata regresijskog modela
lrmodel
new <- data.frame(x = seq(23, 2))
predict(lrmodel, new, se.fit = TRUE)
data1 <- read.csv("data/podaci1.csv", header = F, col.names = c("x", "y"), sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
#strukture podataka
str(data1)
#prikaz podataka
data1
#statistika
xsr = mean(data1$x);
ysr = mean(data1$y);
#formiranje linearnog regresijskog modela u obliku y= b0 + b1x
#definisanje formule u R programskom jeziku
formula = y ~ x
#linearni regresijski model 
lrmodel = lm(formula, data1)
#prikaz koeficijenata regresijskog modela
lrmodel
#korisšetenj modela za izračunavanje vrijednosti podataka za testiranje odnosnoe predvidjanje vrijednosti
new <- data.frame(x = seq(23, 2))
new <- data.frame(x = c(23, 2))
predict(lrmodel, new)
new
predict(lrmodel, new, se.fit = TRUE)
pred.w.plim <- predict(lrmodel, new, interval = "prediction")
pred.w.clim <- predict(lrmodel, new, interval = "confidence")
matplot(new$x, cbind(pred.w.clim, pred.w.plim[, -1]),         lty = c(1, 2, 2, 3, 3), type = "l", ylab = "predicted y")
predict(lrmodel, new)
pred.w.plim <- predict(lrmodel, new, interval = "prediction")
pred.w.clim <- predict(lrmodel, new, interval = "confidence")
matplot(new$x, cbind(pred.w.clim, pred.w.plim[, -1]),         lty = c(1, 2, 2, 3, 3), type = "l", ylab = "predicted y")
new$y = predict(lrmodel, new)
plot(new$x,new$y)
line(new$x, new$y)
new <- data.frame(x = c(23, 2))
new$y = predict(lrmodel, new)
matplot(new$x, new$y),
        lty = c(1, 2, 2, 3, 3), type = "l", ylab = "predicted y")
matplot(new$x, new$y,         lty = c(1, 2, 2, 3, 3), type = "l", ylab = "predicted y")
plot(data1)
abline(new$x, new$y)
lines(new$x, new$y, col="red")
data1 <- read.csv("data/podaci2.csv", header = F, col.names = c("x1","x2", "y"), sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
#strukture podataka
str(data1)
data1 <- read.csv("data/podaci2.csv", header = T, col.names = c("x1","x2", "y"), sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
#strukture podataka
str(data1)
#prikaz podataka
data1
#statistika
xsr = mean(data1$x);
x2sr = mean(data1$x1);
x2sr = mean(data1$x2);
ysr = mean(data1$y);
formula = y ~ x1+x2
#linearni regresijski model 
lrmodel = lm(formula, data1)
#prikaz koeficijenata regresijskog modela
lrmodel
#korištenje modela za izračunavanje vrijednosti podataka za testiranje odnosnoe predvidjanje vrijednosti
new <- data.frame(x = c(23, 2))
new$y = predict(lrmodel, new)
new <- data.frame(x1 = c(23, 22), x2 = c(3, 2))
new$y = predict(lrmodel, new)
lines(new$x, new$y, col="red")
new$y
#Učitavanje podataka data1 <- read.csv("data/podaci2.csv", header = T, col.names = c("x1","x2", "y"), sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE); #strukture podataka str(data1) #prikaz podataka data1 #statistika x1sr = mean(data1$x1); x2sr = mean(data1$x2); ysr = mean(data1$y); #formiranje linearnog regresijskog modela u obliku y= b0 + b1x #definisanje formule u R programskom jeziku formula = y ~ x1+x2 #linearni regresijski model  lrmodel = lm(formula, data1) #prikaz koeficijenata regresijskog modela lrmodel
data1 <- read.csv("data/shipment.txt", header = T, col.names = c("x1","x2", "y"), sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
data1 <- read.csv("data/shipment.txt", header = T, col.names = c("x1","x2", "y"), sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
data1 <- read.table("data/shipment.txt", header = T, col.names = c("x1","x2", "y"), sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
data1 <- read.table("data/shipment.txt", header = T, dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
data1 <- read.table("data/shipment.txt", header = T, dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
#strukture podataka
str(data1)
#prikaz podataka
data1
#statistika
x1sr = mean(data1$x1);
x1sr = mean(data1$x);
ysr = mean(data1$y);
#formiranje linearnog regresijskog modela u obliku y= b0 + b1x
#definisanje formule u R programskom jeziku
plot(data1)
piecewise2 <- lm(y ~ x * (x < 12) + x * (x >= 12))
data1 <- read.table("data/shipment.txt", header = T, dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
#strukture podataka
str(data1)
#prikaz podataka
data1
#statistika
x1sr = mean(data1$x);
ysr = mean(data1$y);
##grafički prikaz i određivanje tačke prekida i prelaska jedna na drugu regresijski pravu
plot(data1)
#vidimo da za x=12 imamo prelaz, pa ce model po dijelovima imati sljedeci oblik
piecewise2 <- lm(y ~ x * (x < 12) + x * (x >= 12))
formula <- y ~ x * (x < 12) + x * (x >= 12)
lrmodel = lm(formula, data1)
formula <- y ~ x * (x < 12) + x * (x >= 12)
lrmodel = lm(formula, data1)
data1 <- read.table("data/shipment.txt", header = T, dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
#strukture podataka
str(data1)
#prikaz podataka
data1
#statistika
x1sr = mean(data1$x);
ysr = mean(data1$y);
##grafički prikaz i određivanje tačke prekida i prelaska jedna na drugu regresijski pravu
plot(data1)
#vidimo da za x=12 imamo prelaz, pa ce model po dijelovima imati sljedeci oblik
formula <- y ~ x * (x < 12) + x * (x >= 12)
#linearni regresijski model 
lrmodel = lm(formula, data1)
#prikaz koeficijenata regresijskog modela
lrmodel
#korištenje modela za izračunavanje vrijednosti podataka za testiranje odnosnoe predvidjanje vrijednosti
new <- data.frame(x1 = c(23, 22), x2 = c(3, 2))
new$y = predict(lrmodel, new)
plot(data1)
#add regression line
lines(new$x, new$y, col="red")
summary(piecewise2)
piecewise2 = lm(formula, data1)
#prikaz koeficijenata regresijskog modela
summary(piecewise2)
#korištenje modela za izračunavanje vrijednosti podataka za testiranje odnosnoe predvidjanje vrijednosti
new <- data.frame(x = c(5, 20))
new$y = predict(piecewise, new)
piecewise = lm(formula, data1)
#prikaz koeficijenata regresijskog modela
summary(piecewise2)
#korištenje modela za izračunavanje vrijednosti podataka za testiranje odnosnoe predvidjanje vrijednosti
new <- data.frame(x = c(5, 20))
new$y = predict(piecewise, new)
ing
>  lines(new$x, new$y, col="red")
curve(piecewise, add = T, from = 1, to = 15)
curve(piecewise, add = T, from = 15, to = max(x))
piecewise = lm(formula, data1)
#prikaz koeficijenata regresijskog modela
summary(piecewise2)
#korištenje modela za izračunavanje vrijednosti podataka za testiranje odnosnoe predvidjanje vrijednosti
new <- data.frame(x = c(5, 20))
new$y = predict(piecewise, new)
#iscrtavanje 
plot(x, y, ylim = c(5, 20), pch = 16)
plot(data1, ylim = c(5, 20), pch = 16)
plot(data1, ylim = c(12, 20), pch = 16)
plot(data1$x, data1$y, ylim = c(12, 20), pch = 16)
new$y = predict(piecewise, new)
new
data1 <- read.table("data/shipment.txt", header = T, dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
#strukture podataka
str(data1)
x1sr = mean(data1$x);
ysr = mean(data1$y);
##grafički prikaz i određivanje tačke prekida i prelaska jedna na drugu regresijski pravu
plot(data1)
#vidimo da za x=12 imamo prelaz, pa ce model po dijelovima imati sljedeci oblik
formula <- y ~ x * (x < 12) + x * (x >= 12)
#linearni regresijski model 
piecewise = lm(formula, data1)
#prikaz koeficijenata regresijskog modela
summary(piecewise2)
data1 <- read.csv("data/podaci1.csv", header = F, col.names = c("x", "y"), sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE); #strukture podataka str(data1) #prikaz podataka data1 #statistika xsr = mean(data1$x); ysr = mean(data1$y); #formiranje linearnog regresijskog modela u obliku y= b0 + b1x #definisanje formule u R programskom jeziku formula = y ~ x #linearni regresijski model  lrmodel = lm(formula, data1) #prikaz koeficijenata regresijskog modela lrmodel #korištenje modela za izračunavanje vrijednosti podataka za testiranje odnosnoe predvidjanje vrijednosti new <- data.frame(x = c(23, 2)) new$y = predict(lrmodel, new) plot(data1) #add regression line lines(new$x, new$y, col="red")
data1 <- read.csv("data/podaci2.csv", header = T, col.names = c("x1","x2", "y"), sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE); #strukture podataka str(data1) #prikaz podataka data1 #statistika x1sr = mean(data1$x1); x2sr = mean(data1$x2); ysr = mean(data1$y); #formiranje linearnog regresijskog modela u obliku y= b0 + b1x #definisanje formule u R programskom jeziku formula = y ~ x1+x2 #linearni regresijski model  lrmodel = lm(formula, data1) #prikaz koeficijenata regresijskog modela lrmodel #korištenje modela za izračunavanje vrijednosti podataka za testiranje odnosnoe predvidjanje vrijednosti new <- data.frame(x1 = c(23, 22), x2 = c(3, 2)) new$y = predict(lrmodel, new) plot(data1) #add regression line lines(new$x, new$y, col="red")
lines(new$x, new$y, col="red")
library(lattice)
cloud(formula, data = data1)
    maintainer="Soils"
cloud(formula, data = data1,     groups = Depth,     maintainer="Soils"     )
cloud(formula, data = data1,     groups = Depth,     main="Soils"     )
cloud(formula, data = data1,     pch=16,     main="Soils"     )
cloud(formula, data = data1,     pch=16,# vrsta tačaka     main="Grafički prikaz y=f(x1,x2)"     )
library(scatterplot3d)
library(scatterplot3d)
sp1 <- scatterplot3d(data1$x1, data1$x2, data1$y)
sp1 <- scatterplot3d(data1$x1, data1$x2, data1$y, pch = 16)
sp1 <- scatterplot3d(data1$x1, data1$x2, data1$y, pch = 16, highlight.3d = T)
sp1$plane3d(lrmodel, lty.box = "solid")
regg <- plot3d(data1$x1, data1$x2, data1$y, type="s", radius=0.2, col ="blue")
library(rgl)
#3d Plot
library(rgl)
regg <- plot3d(data1$x1, data1$x2, data1$y, type="s", radius=0.2, col ="blue")
data1 <- read.table("data/podace3.txt", header = T, dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
data(mtcars)
data(mtcars)
data1= data(mtcars)
data1
str(data1)
require(graphics)
pairs(mtcars, main = "mtcars data")
coplot(mpg ~ disp | as.factor(cyl), data = mtcars,        panel = panel.smooth, rows = 1)
mtcars
data1 <- read.csv("data/mtcars.txt", header = F, col.names = c("x", "y"), sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
str(data1)
data1 <- read.csv("data/mtcars.txt", header = T, sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
str(data1)
data1 <- read.csv("data/mtcars.txt", header = T, sep = "\t", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
str(data1)
data1 <- read.csv("data/mtcars.txt", header = T, sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
str(data1)
data1
mtcars
data1 <- read.csv("data/mtcars.txt", header = T, sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
data1
str(data1)
str(mtcars)
coplot(mpg ~ disp | as.factor(cyl), data = mtcars,        panel = panel.smooth, rows = 1)
data1 <- read.csv("data/mtcars.txt", header = T, sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
data1 <- read.csv("data/mtcars.txt", header = T, sep = ",", dec = ".", skip=28, strip.white = TRUE, stringsAsFactors = FALSE);
data1
data1 <- read.csv("data/pm_data.csv", header = T, sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
str(data1)
data1 <- read.csv("data/pm_data.csv", header = T, sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
#strukture podataka
str(data1)
data1
data1 <- read.csv("data/pm_data.csv", header = T, sep = ",", dec = ".", strip.white = TRUE, stringsAsFactors = FALSE);
data1 <- read.csv("data/pm_data.csv", header = T, sep = ",", dec = ".", strip.white = TRUE, skip = 1, stringsAsFactors = FALSE);
#strukture podataka
str(data1)
data1$defekt = data1$defekt == 1
str(data1)
data1$provider = as.factor(data1$provider);
data1$team = as.factor(data1$team);
str(data1)
boxplot(data = data1,x=data1$defekt)
boxplot(defekt ~ prvider, data = data1)
str(data1)
boxplot(team ~ vijek, data = data1)
plot(team ~ vijek, data = data1)
boxplot(team ~ vijek, data = data1)
boxplot(defekt ~ vijek, data = data1)
boxplot(vijek ~ defekt, data = data1)
boxplot(vijek ~ defekt, data = data1,subset = team)
boxplot(vijek ~ defekt, data = data1, xlab = "Stanje mašina", ylab = "Vijek mašine (sedmica)")
boxplot(vijek ~ defekt, data = data1, main = "Zivotni vijeka mašina", xlab = "Stanje mašina", ylab = "Vijek mašine (sedmica)")
data1 <- read.csv("data/pm_data.csv", header = T, sep = ",", dec = ".", strip.white = TRUE, skip = 1, stringsAsFactors = FALSE); #strukture podataka str(data1) #konverzija defekt varijable u binarnu data1$defekt = as.factor(data1$defekt); #konverzija kolona u kategoričnne tipove data1$provider = as.factor(data1$provider); data1$team = as.factor(data1$team); #prikaz zivotnog vijeka mašina  # TRUE - pokvarene mašine imaju preko 60 sedmica vijek. boxplot(vijek ~ defekt, data = data1,      #     main = "Životni vijeka mašina", xlab = "Stanje mašine", ylab = "Vijek mašine (sedmica)")
data1$defekt = data1$defekt == 1
#konverzija kolona u kategoričnne tipove
data1$provider = as.factor(data1$provider);
data1$team = as.factor(data1$team);
#prikaz zivotnog vijeka mašina 
# TRUE - pokvarene mašine imaju preko 60 sedmica vijek.
boxplot(vijek ~ defekt, data = data1,      #     main = "Životni vijeka mašina", xlab = "Stanje mašine", ylab = "Vijek mašine (sedmica)")
formula = vijek ~ pritisak + vlaga + temparatura + team + provider;
survreg(fromula, data = maintenance, dist = "gaussian")
model = survreg(fromula, data = maintenance, dist = "gaussian")
summary(model)
summary(model)
model = survreg(fromula, data = maintenance, dist = "gaussian")
summary(model)
model = survreg(fromula, data = data1, dist = "gaussian")
model = glm(fromula, data = data1, dist = "gaussian")
formula = vijek ~ pritisak + vlaga + temparatura + team + provider;
model = glm(fromula, data = data1, dist = "gaussian")
formula = defekt ~ vijek + pritisak + vlaga + temparatura + team + provider;
model = glm(fromula, data = data1, dist = "gaussian")
model = glm(fromula, data = data1, family = "binomial")
formula = defekt ~ vijek + pritisak + vlaga + temparatura + team + provider;
model = glm(formula, data = data1, family = "binomial")
data1$defekt = data1$defekt == 1
#konverzija kolona u kategoričnne tipove
data1$provider = as.factor(data1$provider);
data1$team = as.factor(data1$team);
#prikaz zivotnog vijeka mašina 
# TRUE - pokvarene mašine imaju preko 60 sedmica vijek.
boxplot(vijek ~ defekt, data = data1,      #     main = "Životni vijeka mašina", xlab = "Stanje mašine", ylab = "Vijek mašine (sedmica)")
formula = defekt ~ vijek + pritisak + vlaga + temparatura + team + provider;
model = glm(formula, data = data1, family = "binomial")
summary(model)
model = glm(formula, data = data1, family = "gaussian")
summary(model)
help(summary.lm)
